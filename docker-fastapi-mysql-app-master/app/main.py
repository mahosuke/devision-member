# <定義>
# • 発券機• 発券機は料理が注文されたら待ち番号を生成する。
# • 待ち番号はqから順番に999までの値を取ることができる。
# • 発券機は待ち番号を生成したら, 料理名をkeyに、待ち番号をvalueとした辞書型データ
# を生成する
# • データを調理者に伝える。
# • 注意点: 今回は注文数は999以下であるとし, 1000以上のことは考えなくて良い。
# • 食堂の調理者
# • 食堂の調理者は一つのメニューをn個まで作成できる。
# • 調理者は発券機から送信されたデータを見て一番最初に発行された待ち番号のメニュー
# をn個作成する。
# • データの順番(待ち番号の小さい順番)に基づいて作成したメニューの待ち番号をモニ
# ターに出力する。
# • 作成した注文は削除する
# • データに保存してあるメニューの個数がnより小さい時は保存してある個数分だけ作成
# して提供する。 • メニュー
# • メニューはmenuA, menuB, menuC, menuD, menuEの5種類のみだと仮定します。

# <問題>
# 注文者(客)の数 t と 調理者が一つのメニューを作れる個数 n を入力すると、 提供する順番ごとの料理の待ち番号を出力してください。
# 注文者の注文は、menuA,B,C,D,Eからランダムに選ばれるとします。
# <実行結果例>
# 注文者の数: 5⏎
# 1人目のメニュー: menuD
# 2人目のメニュー: menuE
# 3人目のメニュー: menuA
# 4人目のメニュー: menuB
# 5人目のメニュー: menuA
# オーダー一覧
# {'menuA': [3, 5], 'menuB': [4], 'menuC': [], 'menuD': [1], 'menuE': [2]} ひとつのメニューを作れる個数: 2⏎
# menuDを作ります: [1]
# menuEを作ります: [2]
# menuAを作ります: [3, 5]
# menuBを作ります: [4]

import random


def menu_f:
    print('Hello')

print(menu_f)
